---
title: "NBL 2023 Match Predictions"
execute:
  echo: false
description: "Predicting NBL Men's match results weekly for the 2022-2023 season"
---


```{r}
library(dplyr)
library(gt)
library(piggyback)

sysfonts::font_add_google(name = "Overlock", family = "Overlock")
showtext::showtext_auto()

gt_theme <- function(data) {
  data %>%
    # tab_style(
    #   locations = cells_column_labels(),
    #   style     = list(
    #     #Give a thick border below
    #     cell_borders(sides = c("bottom"), weight = px(2)),
    #     #Make text bold
    #     cell_text(weight = "bold")
    #   )
    # ) %>%
    # tab_style(
    #   locations = cells_column_labels(),
    #   style     = list(
    #     #Give a thick border below
    #     cell_borders(sides = c("bottom"), weight = px(2)),
    #     #Make text bold
    #     cell_text(weight = "bold")
    #   )
    # ) %>%
    # opt_all_caps() %>%
    #Use the Chivo font
    #Note the great 'google_font' function in 'gt' that removes the need to pre-load fonts
    opt_table_font(
      font = list(
        google_font("Overlock"),
        default_fonts()
      )
    ) %>%
     tab_options(
      heading.title.font.size = 40,
      heading.subtitle.font.size = 30,
      heading.padding = px(15),
      column_labels.background.color = "#585d63",
      table_body.hlines.color = "lightgrey",
      table.border.top.width = px(3),
      table.border.top.color = "transparent",
      table.border.bottom.color = "transparent",
      table.border.bottom.width = px(3),
      column_labels.border.top.width = px(3),
      column_labels.border.top.color = "transparent",
      column_labels.border.bottom.width = px(3),
      column_labels.border.bottom.color = "transparent",
      row.striping.background_color = "lightgrey",
      data_row.padding = px(5)
    ) 
}

# function to read in data from releases:
read_from_rel <- function(file_name) {

  piggyback::pb_download(paste0(file_name, ".rds"),
                         repo = "JaseZiv/NBL-Modelling",
                         tag = "model_data",
                         dest = tempdir())

  readRDS(paste0(tempdir(), "/", file_name, ".rds"))

}

dat <- read_from_rel("match_result_predictions")
```


:::{.column-page}

```{r}
mod_acc <- dat %>% 
  filter(!is.na(Margin)) %>% 
  summarise(mod_acc = mean(round(HomeWin_predicted) == HomeWin)) %>% pull(mod_acc)

mod_correct <- dat %>% 
  filter(!is.na(Margin)) %>% 
  summarise(mod_acc = sum(round(HomeWin_predicted) == HomeWin)) %>% pull(mod_acc)


dat %>% 
  arrange(desc(match_time_utc)) %>% 
  select(match_time, round_number, home_team_name, away_team_name, venue_name, Margin, HomeWin, HomeWin_predicted) %>% 
  mutate(match_time = as.Date(match_time)) %>%
  gt() %>% 
  fmt_percent(HomeWin_predicted) %>% 
  cols_label(
    match_time = "Date",
    round_number = "Round",
    home_team_name = "Home",
    away_team_name = "Away",
    venue_name = "Venue",
    HomeWin = "Home Win",
    HomeWin_predicted = "Home Probability"
  ) %>% 
  tab_header(
    title = "2022-2023 NBL Men's Match Predictions",
    subtitle = paste0("Model Accuracy: ", scales::percent(mod_acc, accuracy=0.1))
  ) %>% 
  gt_theme() %>% 
  tab_options(table.width = pct(100))
```

:::
